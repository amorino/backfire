const path = require('path')
const webpack = require('webpack')
const HtmlWebpackPlugin = require('html-webpack-plugin')

// PostCSS plugins
const postcssFocus = require('postcss-focus')
const rucksack = require('rucksack-css')
const lost = require('lost')

module.exports = require('./webpack.base.babel')({
  type: 'development',
  devtool: 'inline-source-map',
  output: { // Compile into js/build.js
    path: path.resolve(__dirname, '..', 'build'),
    filename: 'js/[name].js',
    chunkFilename: 'js/[name].chunk.js',
    publicPath: 'http://localhost:7777/',
  },
  // Add hot reloading in development
  entry: [
    'eventsource-polyfill', // necessary for hot reloading with IE
    'webpack-hot-middleware/client',
    path.join(__dirname, '..', 'src/main.js'), // Start with js/app.js
  ],
  // Load the CSS in a style tag in development
  cssLoaders: [{
    loader: 'style-loader',
  }, {
    loader: 'css-loader',
    options: {
      importLoaders: 1,
      sourceMap: true,
    },
  }],
  // Load Stylus with SourceMaps
  stylusLoaders: [{
    loader: 'style-loader',
  }, {
    loader: 'css-loader',
    options: {
      importLoaders: 1,
      sourceMap: true,
      localIdentName: '[local]___[hash:base64:10]',
    },
  }, {
    loader: 'stylus-loader',
  }],
  // Process the CSS with PostCSS
  stylusPlugins: [
    lost(),
    postcssFocus(), // Add a :focus to every :hover
    rucksack({
      autoprefixer: true,
      fallbacks: true,
    }),
  ],
  // Add hot reloading
  plugins: [
    new webpack.HotModuleReplacementPlugin(), // Tell webpack we want hot reloading
    new webpack.NoEmitOnErrorsPlugin(),
    new HtmlWebpackPlugin({
      template: 'src/index.html',
      inject: true, // Inject all files that are generated by webpack, e.g. bundle.js
    }),
  ],
})
